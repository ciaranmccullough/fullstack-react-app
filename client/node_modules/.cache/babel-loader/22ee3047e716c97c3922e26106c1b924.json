{"ast":null,"code":"var _jsxFileName = \"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/src/contexts/menu.context.js\";\nimport React, { createContext, useState } from 'react';\nexport const MenuContext = createContext({\n  menu: {\n    isOpen: false,\n    open: () => {},\n    close: () => {},\n    toggle: () => {}\n  }\n});\nexport const MenuProvider = props => {\n  const [isOpen, setState] = useState(false);\n\n  const open = () => setState(true);\n\n  const close = () => setState(false);\n\n  const toggle = () => {\n    setState(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: {\n      isOpen,\n      open,\n      close,\n      toggle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/ciaranmccullough/web_projects/fullstack-react-library/client/src/contexts/menu.context.js"],"names":["React","createContext","useState","MenuContext","menu","isOpen","open","close","toggle","MenuProvider","props","setState","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,CAAC;AACvCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,IAAI,EAAE,MAAM,CAAE,CAFV;AAGJC,IAAAA,KAAK,EAAE,MAAM,CAAE,CAHX;AAIJC,IAAAA,MAAM,EAAE,MAAM,CAAE;AAJZ;AADiC,CAAD,CAAjC;AASP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACL,MAAD,EAASM,QAAT,IAAqBT,QAAQ,CAAC,KAAD,CAAnC;;AACA,QAAMI,IAAI,GAAG,MAAMK,QAAQ,CAAC,IAAD,CAA3B;;AACA,QAAMJ,KAAK,GAAG,MAAMI,QAAQ,CAAC,KAAD,CAA5B;;AACA,QAAMH,MAAM,GAAG,MAAM;AACnBG,IAAAA,QAAQ,CAAC,CAACN,MAAF,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,MADK;AAELC,MAAAA,IAFK;AAGLC,MAAAA,KAHK;AAILC,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGE,KAAK,CAACE,QART,CADF;AAYD,CAnBM","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const MenuContext = createContext({\n  menu: {\n    isOpen: false,\n    open: () => {},\n    close: () => {},\n    toggle: () => {},\n  },\n});\n\nexport const MenuProvider = (props) => {\n  const [isOpen, setState] = useState(false);\n  const open = () => setState(true);\n  const close = () => setState(false);\n  const toggle = () => {\n    setState(!isOpen);\n  };\n  return (\n    <MenuContext.Provider\n      value={{\n        isOpen,\n        open,\n        close,\n        toggle,\n      }}\n    >\n      {props.children}\n    </MenuContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}