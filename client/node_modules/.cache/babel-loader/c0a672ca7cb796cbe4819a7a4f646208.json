{"ast":null,"code":"import _objectSpread from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{createContext,useState}from'react';import{useToasts}from'react-toast-notifications';// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n// import {PeopleContext} from './people.context';\nexport var BooksContext=createContext({getBooks:function getBooks(){return[];},addBook:function addBook(){return[];},updateBook:function updateBook(){return[];},deleteBook:function deleteBook(){return[];},books:[]});export var BooksProvider=function BooksProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),books=_useState2[0],setBooks=_useState2[1];var _useToasts=useToasts(),addToast=_useToasts.addToast;var getBooks=function getBooks(books){setBooks(books);};var addBook=function addBook(book){setBooks([].concat(_toConsumableArray(books),[book]));};var updateBook=function updateBook(id,updates){var newBook=null;// Get index\nvar index=books.findIndex(function(book){return book._id===id;});// Get actual book\nvar oldBook=books[index];console.log('here',oldBook);// Merge with updates\nnewBook=_objectSpread(_objectSpread({},oldBook),updates);// Recreate the books array\nvar updatedBooks=[].concat(_toConsumableArray(books.slice(0,index)),[newBook],_toConsumableArray(books.slice(index+1)));setBooks(updatedBooks);addToast(\"Updated \".concat(newBook.title),{appearance:'success'});};var deleteBook=function deleteBook(id){var deletedBook=null;// Get index\nvar index=books.findIndex(function(book){return book.id===id;});deletedBook=books[index];// Recreate the books array without deleted book\nvar updatedBooks=[].concat(_toConsumableArray(books.slice(0,index)),_toConsumableArray(books.slice(index+1)));setBooks(updatedBooks);addToast(\"Deleted \".concat(deletedBook.title),{appearance:'success'});};return/*#__PURE__*/React.createElement(BooksContext.Provider,{value:{books:books,getBooks:getBooks,addBook:addBook,updateBook:updateBook,deleteBook:deleteBook}},props.children);};","map":{"version":3,"sources":["/Users/ciaranmccullough/web_projects/fullstack-react-library/client/src/contexts/books.context.js"],"names":["React","createContext","useState","useToasts","BooksContext","getBooks","addBook","updateBook","deleteBook","books","BooksProvider","props","setBooks","addToast","book","id","updates","newBook","index","findIndex","_id","oldBook","console","log","updatedBooks","slice","title","appearance","deletedBook","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createContext, useState } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n// import {PeopleContext} from './people.context';\n\nexport const BooksContext = createContext({\n  getBooks: () => [],\n  addBook: () => [],\n  updateBook: () => [],\n  deleteBook: () => [],\n  books: [],\n});\n\nexport const BooksProvider = (props) => {\n  const [books, setBooks] = useState([]);\n  const { addToast } = useToasts();\n\n  const getBooks = (books) => {\n    setBooks(books);\n  };\n\n  const addBook = (book) => {\n    setBooks([...books, book]);\n  };\n\n  const updateBook = (id, updates) => {\n    let newBook = null;\n    // Get index\n    const index = books.findIndex((book) => book._id === id);\n\n    // Get actual book\n    const oldBook = books[index];\n    console.log('here', oldBook);\n\n    // Merge with updates\n    newBook = {\n      ...oldBook,\n      ...updates, // Overrides oldBook\n    };\n\n    // Recreate the books array\n    const updatedBooks = [\n      ...books.slice(0, index),\n      newBook,\n      ...books.slice(index + 1),\n    ];\n\n    setBooks(updatedBooks);\n    addToast(`Updated ${newBook.title}`, {\n      appearance: 'success',\n    });\n  };\n\n  const deleteBook = (id) => {\n    let deletedBook = null;\n\n    // Get index\n    const index = books.findIndex((book) => book.id === id);\n    deletedBook = books[index];\n\n    // Recreate the books array without deleted book\n    const updatedBooks = [...books.slice(0, index), ...books.slice(index + 1)];\n\n    setBooks(updatedBooks);\n    addToast(`Deleted ${deletedBook.title}`, {\n      appearance: 'success',\n    });\n  };\n\n  return (\n    <BooksContext.Provider\n      value={{\n        books,\n        getBooks,\n        addBook,\n        updateBook,\n        deleteBook,\n      }}\n    >\n      {props.children}\n    </BooksContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}