{"ast":null,"code":"var _jsxFileName = \"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/src/contexts/libraries.context.js\";\nimport React, { createContext, useState } from 'react';\nimport { useToasts } from 'react-toast-notifications'; // import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n\nexport const LibrariesContext = createContext({\n  getLibraries: () => [],\n  addLibrary: () => {},\n  updateLibrary: () => {},\n  deleteLibrary: () => {},\n  libraries: []\n});\nexport const LibrariesProvider = props => {\n  const [libraries, setLibraries] = useState([]); // const [loading, setLoading] = useState(false);\n  // const [loaded, setLoaded] = useState(false);\n  // const [error, setError] = useState(null);\n  // const [search, setSearch] = useState(\"\");\n\n  const {\n    addToast\n  } = useToasts();\n\n  const getLibraries = libraries => {\n    setLibraries(libraries);\n  };\n\n  const addLibrary = library => {\n    setLibraries([...libraries, library]);\n  };\n\n  const updateLibrary = (id, updates) => {\n    let newLibrary = null; // Get index\n\n    const index = libraries.findIndex(library => library._id === id); // Get actual person\n\n    const oldLibrary = libraries[index]; // Merge with updates\n\n    newLibrary = { // legit use of 'var', so can be seen in catch block\n      ...oldLibrary,\n      ...updates // order here is important for the override!!\n\n    }; // recreate the libs array\n\n    const updatedLibrary = [...libraries.slice(0, index), newLibrary, ...libraries.slice(index + 1)];\n    setLibraries(updatedLibrary);\n    addToast(`Updated ${newLibrary.name}`, {\n      appearance: 'success'\n    });\n  };\n\n  const deleteLibrary = id => {\n    let deletedLibrary = null; // Get index\n\n    const index = libraries.findIndex(library => libraries._id === id);\n    deletedLibrary = libraries[index]; // recreate the people array without that library\n\n    const updatedLibrary = [...libraries.slice(0, index), ...libraries.slice(index + 1)];\n    setLibrary(updatedLibrary);\n    addToast(`Deleted ${deletedLibrary.name}`, {\n      appearance: 'success'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LibrariesContext.Provider, {\n    value: {\n      libraries,\n      getLibraries,\n      addLibrary,\n      updateLibrary,\n      deleteLibrary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/ciaranmccullough/web_projects/fullstack-react-library/client/src/contexts/libraries.context.js"],"names":["React","createContext","useState","useToasts","LibrariesContext","getLibraries","addLibrary","updateLibrary","deleteLibrary","libraries","LibrariesProvider","props","setLibraries","addToast","library","id","updates","newLibrary","index","findIndex","_id","oldLibrary","updatedLibrary","slice","name","appearance","deletedLibrary","setLibrary","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n\nexport const LibrariesContext = createContext({\n  getLibraries: () => [],\n  addLibrary: () => {},\n  updateLibrary: () => {},\n  deleteLibrary: () => {},\n  libraries: [],\n});\n\nexport const LibrariesProvider = (props) => {\n  const [libraries, setLibraries] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const [loaded, setLoaded] = useState(false);\n  // const [error, setError] = useState(null);\n  // const [search, setSearch] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const getLibraries = (libraries) => {\n    setLibraries(libraries);\n  };\n\n  const addLibrary = (library) => {\n    setLibraries([...libraries, library]);\n  };\n\n  const updateLibrary = (id, updates) => {\n    let newLibrary = null;\n\n    // Get index\n    const index = libraries.findIndex((library) => library._id === id);\n\n    // Get actual person\n    const oldLibrary = libraries[index];\n\n    // Merge with updates\n    newLibrary = {\n      // legit use of 'var', so can be seen in catch block\n      ...oldLibrary,\n      ...updates, // order here is important for the override!!\n    };\n    // recreate the libs array\n    const updatedLibrary = [\n      ...libraries.slice(0, index),\n      newLibrary,\n      ...libraries.slice(index + 1),\n    ];\n    setLibraries(updatedLibrary);\n    addToast(`Updated ${newLibrary.name}`, {\n      appearance: 'success',\n    });\n  };\n\n  const deleteLibrary = (id) => {\n    let deletedLibrary = null;\n\n    // Get index\n    const index = libraries.findIndex((library) => libraries._id === id);\n    deletedLibrary = libraries[index];\n    // recreate the people array without that library\n    const updatedLibrary = [\n      ...libraries.slice(0, index),\n      ...libraries.slice(index + 1),\n    ];\n    setLibrary(updatedLibrary);\n    addToast(`Deleted ${deletedLibrary.name}`, {\n      appearance: 'success',\n    });\n  };\n\n  return (\n    <LibrariesContext.Provider\n      value={{\n        libraries,\n        getLibraries,\n        addLibrary,\n        updateLibrary,\n        deleteLibrary,\n      }}\n    >\n      {props.children}\n    </LibrariesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}