{"ast":null,"code":"import _objectSpread from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ciaranmccullough/web_projects/fullstack-react-library/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useState}from'react';import{useToasts}from'react-toast-notifications';// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\nexport var PeopleContext=createContext({fetchPeople:function fetchPeople(){return[];},addPerson:function addPerson(){},updatePerson:function updatePerson(){},deletePerson:function deletePerson(){},loaded:false,loading:false,error:null,people:[]});export var PeopleProvider=function PeopleProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),people=_useState2[0],setPeople=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loaded=_useState6[0],setLoaded=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];// const [search, setSearch] = useState(\"\");\nvar _useToasts=useToasts(),addToast=_useToasts.addToast;var fetchPeople=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(loading||loaded||error)){_context.next=4;break;}return _context.abrupt(\"return\");case 4:setLoading(true);case 5:_context.prev=5;_context.next=8;return fetch('/api/v1/people');case 8:response=_context.sent;if(!(response.status!==200)){_context.next=11;break;}throw response;case 11:_context.next=13;return response.json();case 13:data=_context.sent;setPeople(data);// setLoading(false);\n// console.log('people from context', people);\n_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](5);setError(_context.t0.message||_context.t0.statusText);case 20:_context.prev=20;setLoading(false);setLoaded('true');return _context.finish(20);case 24:case\"end\":return _context.stop();}}},_callee,null,[[5,17,20,24]]);}));return function fetchPeople(){return _ref.apply(this,arguments);};}();var addPerson=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData){var response,savedPerson;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch('/api/v1/people',{method:'POST',headers:{'Content-Type':'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:JSON.stringify(formData)});case 3:response=_context2.sent;if(!(response.status!==201)){_context2.next=6;break;}throw response;case 6:_context2.next=8;return response.json();case 8:savedPerson=_context2.sent;console.log('got data',savedPerson);setPeople([].concat(_toConsumableArray(people),[savedPerson]));addToast(\"Saved \".concat(savedPerson.firstName,\" \").concat(savedPerson.lastName),{appearance:'success'});_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);addToast(\"Error \".concat(_context2.t0.message||_context2.t0.statusText),{appearance:'error'});case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14]]);}));return function addPerson(_x){return _ref2.apply(this,arguments);};}();var updatePerson=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,updates){var newPerson,response,index,oldPerson,updatedPeople;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:newPerson=null;_context3.prev=1;_context3.next=4;return fetch(\"/api/v1/people/\".concat(id),{method:'PUT',headers:{'Content-Type':'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:JSON.stringify(updates)});case 4:response=_context3.sent;if(!(response.status!==200)){_context3.next=7;break;}throw response;case 7:// Get index\nindex=people.findIndex(function(person){return person._id===id;});// Get actual person\noldPerson=people[index];// Merge with updates\nnewPerson=_objectSpread(_objectSpread({},oldPerson),updates);// recreate the people array\nupdatedPeople=[].concat(_toConsumableArray(people.slice(0,index)),[newPerson],_toConsumableArray(people.slice(index+1)));setPeople(updatedPeople);addToast(\"Updated \".concat(newPerson.firstName,\" \").concat(newPerson.lastName),{appearance:'success'});_context3.next=19;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](1);console.log(_context3.t0);addToast(\"Error: Failed to update \".concat(newPerson.firstName,\" \").concat(newPerson.lastName),{appearance:'error'});case 19:case\"end\":return _context3.stop();}}},_callee3,null,[[1,15]]);}));return function updatePerson(_x2,_x3){return _ref3.apply(this,arguments);};}();var deletePerson=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){var deletedPerson,response,index,updatedPeople;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:deletedPerson=null;_context4.prev=1;_context4.next=4;return fetch(\"/api/v1/people/\".concat(id),{method:'DELETE',headers:{'Content-Type':'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n}});case 4:response=_context4.sent;if(!(response.status!==204)){_context4.next=7;break;}throw response;case 7:// Get index\nindex=people.findIndex(function(person){return person._id===id;});deletedPerson=people[index];// recreate the people array without that person\nupdatedPeople=[].concat(_toConsumableArray(people.slice(0,index)),_toConsumableArray(people.slice(index+1)));setPeople(updatedPeople);addToast(\"Deleted \".concat(deletedPerson.firstName,\" \").concat(deletedPerson.lastName),{appearance:'success'});_context4.next=18;break;case 14:_context4.prev=14;_context4.t0=_context4[\"catch\"](1);console.log(_context4.t0);addToast(\"Error: Failed to update \".concat(deletedPerson.firstName,\" \").concat(deletedPerson.lastName),{appearance:'error'});case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[1,14]]);}));return function deletePerson(_x4){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(PeopleContext.Provider,{value:{people:people,loading:loading,error:error,fetchPeople:fetchPeople,addPerson:addPerson,updatePerson:updatePerson,deletePerson:deletePerson}},props.children);};","map":{"version":3,"sources":["/Users/ciaranmccullough/web_projects/fullstack-react-library/client/src/contexts/people.context.js"],"names":["React","createContext","useState","useToasts","PeopleContext","fetchPeople","addPerson","updatePerson","deletePerson","loaded","loading","error","people","PeopleProvider","props","setPeople","setLoading","setLoaded","setError","addToast","fetch","response","status","json","data","message","statusText","formData","method","headers","body","JSON","stringify","savedPerson","console","log","firstName","lastName","appearance","id","updates","newPerson","index","findIndex","person","_id","oldPerson","updatedPeople","slice","deletedPerson","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n\nexport const PeopleContext = createContext({\n  fetchPeople: () => [],\n  addPerson: () => {},\n  updatePerson: () => {},\n  deletePerson: () => {},\n  loaded: false,\n  loading: false,\n  error: null,\n  people: [],\n});\n\nexport const PeopleProvider = (props) => {\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  // const [search, setSearch] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const fetchPeople = async () => {\n    // console.log('loading', loading);\n    // console.log('error', error);\n    if (loading || loaded || error) {\n      return;\n    } else {\n      setLoading(true);\n    }\n    try {\n      const response = await fetch('/api/v1/people');\n      if (response.status !== 200) {\n        throw response;\n      }\n      const data = await response.json();\n      setPeople(data);\n      // setLoading(false);\n      // console.log('people from context', people);\n    } catch (err) {\n      setError(err.message || err.statusText);\n    } finally {\n      setLoading(false);\n      setLoaded('true');\n    }\n  };\n\n  const addPerson = async (formData) => {\n    try {\n      const response = await fetch('/api/v1/people', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(formData),\n      });\n      if (response.status !== 201) {\n        throw response;\n      }\n      const savedPerson = await response.json();\n      console.log('got data', savedPerson);\n      setPeople([...people, savedPerson]);\n      addToast(`Saved ${savedPerson.firstName} ${savedPerson.lastName}`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      console.log(err);\n      addToast(`Error ${err.message || err.statusText}`, {\n        appearance: 'error',\n      });\n    }\n  };\n\n  const updatePerson = async (id, updates) => {\n    let newPerson = null;\n    try {\n      const response = await fetch(`/api/v1/people/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(updates),\n      });\n      if (response.status !== 200) {\n        throw response;\n      }\n      // Get index\n      const index = people.findIndex((person) => person._id === id);\n\n      // Get actual person\n      const oldPerson = people[index];\n\n      // Merge with updates\n      newPerson = {\n        // legit use of 'var', so can be seen in catch block\n        ...oldPerson,\n        ...updates, // order here is important for the override!!\n      };\n      // recreate the people array\n      const updatedPeople = [\n        ...people.slice(0, index),\n        newPerson,\n        ...people.slice(index + 1),\n      ];\n      setPeople(updatedPeople);\n      addToast(`Updated ${newPerson.firstName} ${newPerson.lastName}`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      console.log(err);\n      addToast(\n        `Error: Failed to update ${newPerson.firstName} ${newPerson.lastName}`,\n        {\n          appearance: 'error',\n        }\n      );\n    }\n  };\n\n  const deletePerson = async (id) => {\n    let deletedPerson = null;\n    try {\n      const response = await fetch(`/api/v1/people/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      });\n      if (response.status !== 204) {\n        throw response;\n      }\n      // Get index\n      const index = people.findIndex((person) => person._id === id);\n      deletedPerson = people[index];\n      // recreate the people array without that person\n      const updatedPeople = [\n        ...people.slice(0, index),\n        ...people.slice(index + 1),\n      ];\n      setPeople(updatedPeople);\n      addToast(`Deleted ${deletedPerson.firstName} ${deletedPerson.lastName}`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      console.log(err);\n      addToast(\n        `Error: Failed to update ${deletedPerson.firstName} ${deletedPerson.lastName}`,\n        {\n          appearance: 'error',\n        }\n      );\n    }\n  };\n\n  return (\n    <PeopleContext.Provider\n      value={{\n        people,\n        loading,\n        error,\n        fetchPeople,\n        addPerson,\n        updatePerson,\n        deletePerson,\n      }}\n    >\n      {props.children}\n    </PeopleContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}