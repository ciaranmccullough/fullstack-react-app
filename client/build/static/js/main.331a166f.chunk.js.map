{"version":3,"sources":["contexts/people.context.js","contexts/books.context.js","contexts/menu.context.js","components/nav-drawer/nav-drawer.js","components/header/header.js","components/page-frame/page-frame.js","pages/home/home.js","pages/people/people.js","pages/books/books.js","pages/404/404.js","pages/add-people/add-people.js","pages/update-people/update-people.js","pages/add-books/add-books.js","pages/update-books/update-books.js","App.js","serviceWorker.js","index.js"],"names":["PeopleContext","createContext","fetchPeople","addPerson","updatePerson","deletePerson","loaded","loading","error","people","PeopleProvider","props","useState","setPeople","setLoading","setLoaded","setError","addToast","useToasts","a","fetch","response","status","json","data","message","statusText","formData","method","headers","body","JSON","stringify","savedPerson","console","log","firstName","lastName","appearance","id","updates","newPerson","index","findIndex","person","_id","oldPerson","updatedPeople","slice","deletedPerson","Provider","value","children","BooksContext","getBooks","addBook","updateBook","deleteBook","books","BooksProvider","setBooks","book","newBook","oldBook","updatedBooks","title","deletedBook","MenuContext","menu","isOpen","open","close","toggle","MenuProvider","setState","useStyles","makeStyles","list","width","NavDrawer","classes","useContext","handleDrawer","event","type","key","Drawer","anchor","onClose","className","role","onClick","onKeyDown","List","text","to","map","ListItem","button","component","NavLink","ListItemText","theme","root","flexGrow","menuButton","marginRight","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","paper","control","PageFrame","useLocation","Container","maxWidth","Grid","container","item","xs","Home","People","Books","NotFound","AddPeople","UpdatePeople","AddBooks","UpdateBooks","App","autoDismiss","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qRAIaA,EAAgBC,wBAAc,CACzCC,YAAa,iBAAM,IACnBC,UAAW,aACXC,aAAc,aACdC,aAAc,aACdC,QAAQ,EACRC,SAAS,EACTC,MAAO,KACPC,OAAQ,KAGGC,EAAiB,SAACC,GAAW,IAAD,EACXC,mBAAS,IADE,mBAChCH,EADgC,KACxBI,EADwB,OAETD,oBAAS,GAFA,mBAEhCL,EAFgC,KAEvBO,EAFuB,OAGXF,oBAAS,GAHE,mBAGhCN,EAHgC,KAGxBS,EAHwB,OAIbH,mBAAS,MAJI,mBAIhCJ,EAJgC,KAIzBQ,EAJyB,KAM/BC,EAAaC,sBAAbD,SAEFf,EAAW,uCAAG,8BAAAiB,EAAA,2DAGdZ,GAAWD,GAAUE,GAHP,iDAMhBM,GAAW,GANK,gCASOM,MAAM,kBATb,UAUQ,OADlBC,EATU,QAUHC,OAVG,uBAWRD,EAXQ,yBAaGA,EAASE,OAbZ,QAaVC,EAbU,OAchBX,EAAUW,GAdM,kDAkBhBR,EAAS,KAAIS,SAAW,KAAIC,YAlBZ,yBAoBhBZ,GAAW,GACXC,EAAU,QArBM,6EAAH,qDAyBXZ,EAAS,uCAAG,WAAOwB,GAAP,iBAAAR,EAAA,+EAESC,MAAM,iBAAkB,CAC7CQ,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAUL,KART,UAUU,OARlBN,EAFQ,QAUDC,OAVC,sBAWND,EAXM,uBAaYA,EAASE,OAbrB,OAaRU,EAbQ,OAcdC,QAAQC,IAAI,WAAYF,GACxBpB,EAAU,GAAD,mBAAKJ,GAAL,CAAawB,KACtBhB,EAAS,SAAD,OAAUgB,EAAYG,UAAtB,YAAmCH,EAAYI,UAAY,CACjEC,WAAY,YAjBA,kDAoBdJ,QAAQC,IAAR,MACAlB,EAAS,SAAD,OAAU,KAAIQ,SAAW,KAAIC,YAAc,CACjDY,WAAY,UAtBA,0DAAH,sDA2BTlC,EAAY,uCAAG,WAAOmC,EAAIC,GAAX,uBAAArB,EAAA,6DACfsB,EAAY,KADG,kBAGMrB,MAAM,kBAAD,OAAmBmB,GAAM,CACnDX,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAUQ,KATN,UAWO,OARlBnB,EAHW,QAWJC,OAXI,sBAYTD,EAZS,OAeXqB,EAAQjC,EAAOkC,WAAU,SAACC,GAAD,OAAYA,EAAOC,MAAQN,KAGpDO,EAAYrC,EAAOiC,GAGzBD,EAAS,2BAEJK,GACAN,GAGCO,EA3BW,sBA4BZtC,EAAOuC,MAAM,EAAGN,IA5BJ,CA6BfD,GA7Be,YA8BZhC,EAAOuC,MAAMN,EAAQ,KAE1B7B,EAAUkC,GACV9B,EAAS,WAAD,OAAYwB,EAAUL,UAAtB,YAAmCK,EAAUJ,UAAY,CAC/DC,WAAY,YAlCG,kDAqCjBJ,QAAQC,IAAR,MACAlB,EAAS,2BAAD,OACqBwB,EAAUL,UAD/B,YAC4CK,EAAUJ,UAC5D,CACEC,WAAY,UAzCC,0DAAH,wDA+CZjC,EAAY,uCAAG,WAAOkC,GAAP,qBAAApB,EAAA,6DACf8B,EAAgB,KADD,kBAGM7B,MAAM,kBAAD,OAAmBmB,GAAM,CACnDX,OAAQ,SACRC,QAAS,CACP,eAAgB,sBANH,UAUO,OAPlBR,EAHW,QAUJC,OAVI,sBAWTD,EAXS,OAcXqB,EAAQjC,EAAOkC,WAAU,SAACC,GAAD,OAAYA,EAAOC,MAAQN,KAC1DU,EAAgBxC,EAAOiC,GAEjBK,EAjBW,sBAkBZtC,EAAOuC,MAAM,EAAGN,IAlBJ,YAmBZjC,EAAOuC,MAAMN,EAAQ,KAE1B7B,EAAUkC,GACV9B,EAAS,WAAD,OAAYgC,EAAcb,UAA1B,YAAuCa,EAAcZ,UAAY,CACvEC,WAAY,YAvBG,kDA0BjBJ,QAAQC,IAAR,MACAlB,EAAS,2BAAD,OACqBgC,EAAcb,UADnC,YACgDa,EAAcZ,UACpE,CACEC,WAAY,UA9BC,0DAAH,sDAoClB,OACE,kBAACtC,EAAckD,SAAf,CACEC,MAAO,CACL1C,SACAF,UACAC,QACAN,cACAC,YACAC,eACAC,iBAGDM,EAAMyC,WCpKAC,EAAepD,wBAAc,CACxCqD,SAAU,iBAAM,IAChBC,QAAS,iBAAM,IACfC,WAAY,iBAAM,IAClBC,WAAY,iBAAM,IAClBC,MAAO,KAGIC,EAAgB,SAAChD,GAAW,IAAD,EACZC,mBAAS,IADG,mBAC/B8C,EAD+B,KACxBE,EADwB,KAE9B3C,EAAaC,sBAAbD,SAsDR,OACE,kBAACoC,EAAaH,SAAd,CACEC,MAAO,CACLO,QACAJ,SAxDW,SAACI,GAChBE,EAASF,IAwDLH,QArDU,SAACM,GACfD,EAAS,GAAD,mBAAKF,GAAL,CAAYG,MAqDhBL,WAlDa,SAACjB,EAAIC,GACtB,IAAIsB,EAEEpB,EAAQgB,EAAMf,WAAU,SAACkB,GAAD,OAAUA,EAAKhB,MAAQN,KAG/CwB,EAAUL,EAAMhB,GACtBR,QAAQC,IAAI,OAAQ4B,GAGpBD,EAAO,2BACFC,GACAvB,GAIL,IAAMwB,EAAY,sBACbN,EAAMV,MAAM,EAAGN,IADF,CAEhBoB,GAFgB,YAGbJ,EAAMV,MAAMN,EAAQ,KAGzBkB,EAASI,GACT/C,EAAS,WAAD,OAAY6C,EAAQG,OAAS,CACnC3B,WAAY,aA2BVmB,WAvBa,SAAClB,GAClB,IAAI2B,EAGExB,EAAQgB,EAAMf,WAAU,SAACkB,GAAD,OAAUA,EAAKtB,KAAOA,KACpD2B,EAAcR,EAAMhB,GAGpB,IAAMsB,EAAY,sBAAON,EAAMV,MAAM,EAAGN,IAAtB,YAAiCgB,EAAMV,MAAMN,EAAQ,KAEvEkB,EAASI,GACT/C,EAAS,WAAD,OAAYiD,EAAYD,OAAS,CACvC3B,WAAY,eAcX3B,EAAMyC,WC9EAe,EAAclE,wBAAc,CACvCmE,KAAM,CACJC,QAAQ,EACRC,KAAM,aACNC,MAAO,aACPC,OAAQ,gBAICC,EAAe,SAAC9D,GAAW,IAAD,EACVC,oBAAS,GADC,mBAC9ByD,EAD8B,KACtBK,EADsB,KAOrC,OACE,kBAACP,EAAYjB,SAAb,CACEC,MAAO,CACLkB,SACAC,KATO,kBAAMI,GAAS,IAUtBH,MATQ,kBAAMG,GAAS,IAUvBF,OATS,WACbE,GAAUL,MAWP1D,EAAMyC,W,iHClBPuB,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,OA2CIC,EAvCG,WAChB,IAAMC,EAAUL,IADM,EAEKM,qBAAWd,GAA9BE,EAFc,EAEdA,OAAQG,EAFM,EAENA,OACVU,EAAe,kBAAM,SAACC,IAET,YAAfA,EAAMC,MACS,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAKhCb,MAEF,OACE,kBAACc,EAAA,EAAD,CAAQC,OAAO,OAAOjB,KAAMD,EAAQmB,QAASN,KAC3C,yBACEO,UAAWT,EAAQH,KACnBa,KAAK,eACLC,QAAST,IACTU,UAAWV,KAEX,kBAACW,EAAA,EAAD,KACG,CACC,CAAEC,KAAM,OAAQC,GAAI,KACpB,CAAED,KAAM,SAAUC,GAAI,WACtB,CAAED,KAAM,aAAcC,GAAI,eAC1B,CAAED,KAAM,QAASC,GAAI,UACrB,CAAED,KAAM,YAAaC,GAAI,eACzBC,KAAI,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACJ,kBAACE,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAASL,GAAIA,EAAIV,IAAKS,GAChD,kBAACO,EAAA,EAAD,KAAeP,WChCvBnB,EAAYC,aAAW,SAAC0B,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAa,SAEfzC,MAAM,aACJuC,SAAU,EACVG,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLC,SAAU,WACVC,aAAcV,EAAMW,MAAMD,aAC1BE,gBAAiBC,YAAKb,EAAMc,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKb,EAAMc,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZzC,MAAO,QACNwB,EAAMM,YAAYC,GAAG,MAAQ,CAC5BU,WAAYjB,EAAMkB,QAAQ,GAC1B1C,MAAO,SAGX2C,WAAY,CACVC,QAASpB,EAAMkB,QAAQ,EAAG,GAC1BG,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAASpB,EAAMkB,QAAQ,EAAG,EAAG,EAAG,GAEhCU,YAAY,cAAD,OAAgB5B,EAAMkB,QAAQ,GAA9B,OACXW,WAAY7B,EAAM8B,YAAYC,OAAO,SACrCvD,MAAO,QACNwB,EAAMM,YAAYC,GAAG,MAAQ,CAC5B/B,MAAO,OACP,UAAW,CACTA,MAAO,cA6CAwD,EAvCA,WACb,IAAMtD,EAAUL,IACRH,EAAWS,qBAAWd,GAAtBK,OACR,OACE,yBAAKiB,UAAWT,EAAQuB,MACtB,kBAAC,EAAD,MACA,kBAACgC,EAAA,EAAD,CAAQxB,SAAS,UACf,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLjD,UAAWT,EAAQyB,WACnBuB,MAAM,UACNW,aAAW,cACXhD,QAASnB,GAET,kBAAC,IAAD,OAEF,kBAACoE,EAAA,EAAD,CAAYnD,UAAWT,EAAQf,MAAO4E,QAAQ,KAAKC,QAAM,GAAzD,4B,kBC/EJnE,EAAYC,aAAW,SAAC0B,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZuC,MAAO,CACLpB,OAAQ,IACR7C,MAAO,KAETkE,QAAS,CACPtB,QAASpB,EAAMkB,QAAQ,QAqBZyB,EAjBG,SAACtI,GACjB,IAAMqE,EAAUL,IACDuE,cAEf,OAEE,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC7D,UAAWT,EAAQuB,KAAMiB,QAAS,GAChD,kBAAC6B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZ7I,EAAMyC,aC+BFqG,EAvDF,WACX,OACE,yBAAKhE,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,KACE,4CCgBKiE,EAtBA,SAAC/I,GACd,OACE,yBAAK8E,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,KACE,0CCeKkE,EApBD,WACZ,OACE,yBAAKlE,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,KACE,yCCIKmE,EAXE,WACf,OACE,yBAAKnE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,gDCqBOoE,EAtBG,WAChB,OACE,yBAAKpE,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,KACE,0CCRKqE,EAJM,SAACnJ,GACpB,OAAO,+CCgBMoJ,EAdE,WACf,OACE,yBAAKtE,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,KACE,6CCOKuE,EAdK,SAACrJ,GACnB,OACE,yBAAK8E,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,KACE,gDCuCKwE,MAjCf,WACE,OACE,kBAAC,gBAAD,CAAeC,aAAa,GAC1B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjE,UAAWsD,IACjC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,UAAUjE,UAAWuD,IACvC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAI,cAAiBjE,UAAW0D,IAC7C,kBAAC,IAAD,CACEM,OAAK,EACLC,KAAI,qBACJjE,UAAW2D,IAEb,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASjE,UAAWwD,IACtC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAM,aAAcjE,UAAW4D,IAC5C,kBAAC,IAAD,CACEI,OAAK,EACLC,KAAI,oBACJjE,UAAW6D,IAEb,kBAAC,IAAD,CAAOI,KAAK,IAAIjE,UAAWyD,WC3BvBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7K,GACL0B,QAAQ1B,MAAMA,EAAMiB,c","file":"static/js/main.331a166f.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n\nexport const PeopleContext = createContext({\n  fetchPeople: () => [],\n  addPerson: () => {},\n  updatePerson: () => {},\n  deletePerson: () => {},\n  loaded: false,\n  loading: false,\n  error: null,\n  people: [],\n});\n\nexport const PeopleProvider = (props) => {\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  // const [search, setSearch] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const fetchPeople = async () => {\n    // console.log('loading', loading);\n    // console.log('error', error);\n    if (loading || loaded || error) {\n      return;\n    } else {\n      setLoading(true);\n    }\n    try {\n      const response = await fetch('/api/v1/people');\n      if (response.status !== 200) {\n        throw response;\n      }\n      const data = await response.json();\n      setPeople(data);\n      // setLoading(false);\n      // console.log('people from context', people);\n    } catch (err) {\n      setError(err.message || err.statusText);\n    } finally {\n      setLoading(false);\n      setLoaded('true');\n    }\n  };\n\n  const addPerson = async (formData) => {\n    try {\n      const response = await fetch('/api/v1/people', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(formData),\n      });\n      if (response.status !== 201) {\n        throw response;\n      }\n      const savedPerson = await response.json();\n      console.log('got data', savedPerson);\n      setPeople([...people, savedPerson]);\n      addToast(`Saved ${savedPerson.firstName} ${savedPerson.lastName}`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      console.log(err);\n      addToast(`Error ${err.message || err.statusText}`, {\n        appearance: 'error',\n      });\n    }\n  };\n\n  const updatePerson = async (id, updates) => {\n    let newPerson = null;\n    try {\n      const response = await fetch(`/api/v1/people/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(updates),\n      });\n      if (response.status !== 200) {\n        throw response;\n      }\n      // Get index\n      const index = people.findIndex((person) => person._id === id);\n\n      // Get actual person\n      const oldPerson = people[index];\n\n      // Merge with updates\n      newPerson = {\n        // legit use of 'var', so can be seen in catch block\n        ...oldPerson,\n        ...updates, // order here is important for the override!!\n      };\n      // recreate the people array\n      const updatedPeople = [\n        ...people.slice(0, index),\n        newPerson,\n        ...people.slice(index + 1),\n      ];\n      setPeople(updatedPeople);\n      addToast(`Updated ${newPerson.firstName} ${newPerson.lastName}`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      console.log(err);\n      addToast(\n        `Error: Failed to update ${newPerson.firstName} ${newPerson.lastName}`,\n        {\n          appearance: 'error',\n        }\n      );\n    }\n  };\n\n  const deletePerson = async (id) => {\n    let deletedPerson = null;\n    try {\n      const response = await fetch(`/api/v1/people/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      });\n      if (response.status !== 204) {\n        throw response;\n      }\n      // Get index\n      const index = people.findIndex((person) => person._id === id);\n      deletedPerson = people[index];\n      // recreate the people array without that person\n      const updatedPeople = [\n        ...people.slice(0, index),\n        ...people.slice(index + 1),\n      ];\n      setPeople(updatedPeople);\n      addToast(`Deleted ${deletedPerson.firstName} ${deletedPerson.lastName}`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      console.log(err);\n      addToast(\n        `Error: Failed to update ${deletedPerson.firstName} ${deletedPerson.lastName}`,\n        {\n          appearance: 'error',\n        }\n      );\n    }\n  };\n\n  return (\n    <PeopleContext.Provider\n      value={{\n        people,\n        loading,\n        error,\n        fetchPeople,\n        addPerson,\n        updatePerson,\n        deletePerson,\n      }}\n    >\n      {props.children}\n    </PeopleContext.Provider>\n  );\n};\n","import React from 'react';\nimport { createContext, useState } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n// import cloneDeep from 'lodash.cloneDeep' <-- use if your objects get complex\n// import {PeopleContext} from './people.context';\n\nexport const BooksContext = createContext({\n  getBooks: () => [],\n  addBook: () => [],\n  updateBook: () => [],\n  deleteBook: () => [],\n  books: [],\n});\n\nexport const BooksProvider = (props) => {\n  const [books, setBooks] = useState([]);\n  const { addToast } = useToasts();\n\n  const getBooks = (books) => {\n    setBooks(books);\n  };\n\n  const addBook = (book) => {\n    setBooks([...books, book]);\n  };\n\n  const updateBook = (id, updates) => {\n    let newBook = null;\n    // Get index\n    const index = books.findIndex((book) => book._id === id);\n\n    // Get actual book\n    const oldBook = books[index];\n    console.log('here', oldBook);\n\n    // Merge with updates\n    newBook = {\n      ...oldBook,\n      ...updates, // Overrides oldBook\n    };\n\n    // Recreate the books array\n    const updatedBooks = [\n      ...books.slice(0, index),\n      newBook,\n      ...books.slice(index + 1),\n    ];\n\n    setBooks(updatedBooks);\n    addToast(`Updated ${newBook.title}`, {\n      appearance: 'success',\n    });\n  };\n\n  const deleteBook = (id) => {\n    let deletedBook = null;\n\n    // Get index\n    const index = books.findIndex((book) => book.id === id);\n    deletedBook = books[index];\n\n    // Recreate the books array without deleted book\n    const updatedBooks = [...books.slice(0, index), ...books.slice(index + 1)];\n\n    setBooks(updatedBooks);\n    addToast(`Deleted ${deletedBook.title}`, {\n      appearance: 'success',\n    });\n  };\n\n  return (\n    <BooksContext.Provider\n      value={{\n        books,\n        getBooks,\n        addBook,\n        updateBook,\n        deleteBook,\n      }}\n    >\n      {props.children}\n    </BooksContext.Provider>\n  );\n};\n","import React, { createContext, useState } from 'react';\n\nexport const MenuContext = createContext({\n  menu: {\n    isOpen: false,\n    open: () => {},\n    close: () => {},\n    toggle: () => {},\n  },\n});\n\nexport const MenuProvider = (props) => {\n  const [isOpen, setState] = useState(false);\n  const open = () => setState(true);\n  const close = () => setState(false);\n  const toggle = () => {\n    setState(!isOpen);\n  };\n  return (\n    <MenuContext.Provider\n      value={{\n        isOpen,\n        open,\n        close,\n        toggle,\n      }}\n    >\n      {props.children}\n    </MenuContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { MenuContext } from './../../contexts/menu.context';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n});\n\nconst NavDrawer = () => {\n  const classes = useStyles();\n  const { isOpen, toggle } = useContext(MenuContext);\n  const handleDrawer = () => (event) => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    toggle();\n  };\n  return (\n    <Drawer anchor='left' open={isOpen} onClose={handleDrawer()}>\n      <div\n        className={classes.list}\n        role='presentation'\n        onClick={handleDrawer()}\n        onKeyDown={handleDrawer()}\n      >\n        <List>\n          {[\n            { text: 'Home', to: '/' },\n            { text: 'People', to: '/people' },\n            { text: 'Add People', to: '/people/add' },\n            { text: 'Books', to: '/books' },\n            { text: 'Add Books', to: '/books/add' },\n          ].map(({ text, to }) => (\n            <ListItem button component={NavLink} to={to} key={text}>\n              <ListItemText>{text}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavDrawer;\n","import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n// import InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import SearchIcon from \"@material-ui/icons/Search\";\nimport NavDrawer from './../nav-drawer/nav-drawer';\n\nimport { MenuContext } from './../../contexts/menu.context';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: '-50px', // Because it off-centers the title (logically -64px)\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const { toggle } = useContext(MenuContext);\n  return (\n    <div className={classes.root}>\n      <NavDrawer />\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='open drawer'\n            onClick={toggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant='h6' noWrap>\n            Todos Full-Stack App\n          </Typography>\n          {/* <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { useLocation } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst PageFrame = (props) => {\n  const classes = useStyles();\n  let location = useLocation();\n\n  return (\n    //  transition group\n    <Container maxWidth='lg'>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          {props.children}\n        </Grid>\n      </Grid>\n    </Container>\n    // Transition Group\n  );\n};\n\nexport default PageFrame;\n","import React from 'react';\nimport Header from './../../components/header/header';\nimport PageFrame from './../../components/page-frame/page-frame';\n\nconst Home = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <main>\n        <PageFrame>\n          <h1>Homepage</h1>\n          {/* <ul\n            className='typographic'\n            style={{\n              fontWeight: 'bold',\n              maxWidth: '40%',\n              textAlign: 'left',\n              margin: 'auto',\n            }}\n          >\n            <li>\n              List people{' '}\n              <span\n                style={{\n                  // display: \"block\",\n                  fontWeight: 'normal',\n                }}\n              >\n                (including the ability to delete and navigate to update pages)\n              </span>\n            </li>\n            <li>Add people</li>\n            <li\n              style={{\n                marginBottom: '15px',\n              }}\n            >\n              Update people\n            </li>\n            <li>\n              List tasks{' '}\n              <span\n                style={{\n                  // display: \"block\",\n                  fontWeight: 'normal',\n                }}\n              >\n                (including the ability to delete and navigate to update pages)\n              </span>\n            </li>\n            <li>Add tasks</li>\n            <li>Update tasks</li>\n          </ul> */}\n        </PageFrame>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from './../../components/header/header';\nimport PageFrame from './../../components/page-frame/page-frame';\n\nconst People = (props) => {\n  return (\n    <div className='App'>\n      <Header />\n      <main>\n        <PageFrame>\n          <h1>People</h1>\n          {/* {loading ? <CircularProgress /> : null}\n          {!loading && error ? <ErrorDisplay error={error} /> : null}\n          {!loading && !error && people && people.length ? (\n            <PeopleList people={people} />\n          ) : null}\n          ;\n          {!loading && !error && people && !people.length ? (\n            <NoResults dataName='people' />\n          ) : null} */}\n        </PageFrame>\n      </main>\n    </div>\n  );\n};\n\nexport default People;\n","import React from 'react';\nimport Header from './../../components/header/header';\nimport PageFrame from './../../components/page-frame/page-frame';\n// import { BooksContext } from './../../contexts/books.context';\n\nconst Books = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <main>\n        <PageFrame>\n          <h1>Todos</h1>\n          {/* {loading ? <CircularProgress /> : null}\n          {!loading && error ? (<ErrorDisplay error={error} />): null} */}\n          {/* The '?' below is an 'optional chaining operator' (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) */}\n          {/* {!loading && !error && !todos?.length ? (\n            <NoResults dataName=\"todos\" />\n          ): null}\n          {!loading && !error && todos?.length ? (<TodosList todos={todos} />) : null} */}\n        </PageFrame>\n      </main>\n    </div>\n  );\n};\n\nexport default Books;\n","import React from 'react';\nimport Header from './../../components/header/header';\nimport PageFrame from './../../components/page-frame/page-frame';\n\nconst NotFound = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <PageFrame>\n        <h1>404 Not Found</h1>\n      </PageFrame>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport Header from './../../components/header/header';\nimport PageFrame from './../../components/page-frame/page-frame';\n// import NoResults from './../../components/no-results/no-results';\n// import { CircularProgress } from '@material-ui/core';\n// import PeopleList from './../../components/people-list/people-list';\n// import { PeopleContext } from './../../contexts/people.context';\n\nconst AddPeople = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <main>\n        <PageFrame>\n          <h1>People</h1>\n          {/* {loading ? <CircularProgress /> : null}\n          {!loading && error ? <ErrorDisplay error={error} /> : null}\n          {!loading && !error && people && people.length ? (\n            <PeopleList people={people} />\n          ) : null}\n          ;\n          {!loading && !error && people && !people.length ? (\n            <NoResults dataName='people' />\n          ) : null} */}\n        </PageFrame>\n      </main>\n    </div>\n  );\n};\n\nexport default AddPeople;\n","import React from 'react';\n\nconst UpdatePeople = (props) => {\n  return <div>UPDATE PEOPLE</div>;\n};\n\nexport default UpdatePeople;\n","import React from 'react';\nimport Header from '../../components/header/header';\nimport PageFrame from './../../components/page-frame/page-frame';\n// import BooksForm from './../../components/forms/todo-form/todo-form';\n\nconst AddBooks = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <main>\n        <PageFrame>\n          <h1>Add Books</h1>\n          {/* <BooksForm /> */}\n        </PageFrame>\n      </main>\n    </div>\n  );\n};\n\nexport default AddBooks;\n","import React from 'react';\nimport PageFrame from '../../components/page-frame/page-frame';\nimport Header from '../../components/header/header';\n\nconst UpdateBooks = (props) => {\n  return (\n    <div className='App'>\n      <Header />\n      <main>\n        <PageFrame>\n          <h1>Update Books</h1>\n          {/* <TodoForm initialValues={todoToBeUpdated} /> */}\n        </PageFrame>\n      </main>\n    </div>\n  );\n};\n\nexport default UpdateBooks;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { PeopleProvider } from './contexts/people.context';\nimport { BooksProvider } from './contexts/books.context';\nimport { MenuProvider } from './contexts/menu.context';\n\nimport Home from './pages/home/home';\nimport People from './pages/people/people';\nimport Books from './pages/books/books';\nimport NotFound from './pages/404/404';\nimport AddPeople from './pages/add-people/add-people';\nimport UpdatePeople from './pages/update-people/update-people';\nimport AddBooks from './pages/add-books/add-books';\nimport UpdateBooks from './pages/update-books/update-books';\n\nfunction App() {\n  return (\n    <ToastProvider autoDismiss={true}>\n      <PeopleProvider>\n        <BooksProvider>\n          <MenuProvider>\n            <Router>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/people' component={People} />\n                <Route exact path={`/people/add`} component={AddPeople} />\n                <Route\n                  exact\n                  path={`/people/update/:id`}\n                  component={UpdatePeople}\n                />\n                <Route exact path='/books' component={Books} />\n                <Route exact path={'/books/add'} component={AddBooks} />\n                <Route\n                  exact\n                  path={`/books/update/:id`}\n                  component={UpdateBooks}\n                />\n                <Route path='*' component={NotFound} />\n              </Switch>\n            </Router>\n          </MenuProvider>\n        </BooksProvider>\n      </PeopleProvider>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}